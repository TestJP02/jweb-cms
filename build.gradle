apply from: file("${rootDir}/gradle/project.gradle")
def repo = System.getProperty("user.home")

def jwebVersion = '1.0.0'
def guavaVersion = '27.0.1-jre'
def jacksonVersion = '2.9.8'
def jerseyVersion = "2.27"
def jedisVersion = '3.0.1'
def commonPoolVersion = '2.6.0'
def commonDBCPVersion = '2.5.0'
def hibernateVersion = '5.4.0.Final'
def hibernateValidatorVersion = '6.0.13.Final'
def asmVersion = '7.0'
def javassistVersion = '3.24.1-GA'
def undertowVersion = '2.0.16.Final'


subprojects {
    apply plugin: 'maven-publish'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
        mavenLocal()
        flatDir {
            dirs "${rootDir}/jweb-cms/captcha-web-simple/libs"
        }
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId project.name.startsWith("jweb-") ? project.name.substring("jweb-".length()) : project.name
                from components.java
            }
        }

        repositories {
            maven {
                url "${repo}/Workspace/maven-repo"
            }
        }
    }

    group = 'app.jweb'
    version = "${jwebVersion}"
}


project(':jweb-framework:module') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api("com.google.guava:guava:${guavaVersion}") {
            exclude group: 'com.google.code.findbugs'
        }
        api('org.glassfish.hk2:hk2-api:2.5.0-b42') {
            exclude group: 'javax.inject'
        }
        api 'org.slf4j:slf4j-api:1.7.25'
        api 'javax.inject:javax.inject:1'
        api 'javax.annotation:javax.annotation-api:1.2'
        api 'javax.validation:validation-api:2.0.1.Final'
        api 'javax.ws.rs:javax.ws.rs-api:2.1'
        api 'javax.activation:javax.activation-api:1.2.0'
        api group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'
        api 'org.glassfish.hk2.external:aopalliance-repackaged:2.5.0-b42'

        implementation group: 'org.jboss.logging', name: 'jboss-logging', version: '3.3.2.Final'
        implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.25'

        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-server', version: "${jerseyVersion}") {
            exclude group: 'javax.validation'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-common', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.glassfish.jersey.inject', name: 'jersey-hk2', version: "${jerseyVersion}") {
            exclude group: 'javax.inject'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: "${jerseyVersion}") {
            exclude group: 'com.fasterxml.jackson.core'
            exclude group: 'com.fasterxml.jackson.module'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.glassfish.jersey.ext', name: 'jersey-bean-validation', version: "${jerseyVersion}") {
            exclude group: 'org.hibernate'
            exclude group: 'javax.el'
            exclude group: 'org.glassfish.web', module: 'javax.el'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation group: 'org.ow2.asm', name: 'asm', version: "${asmVersion}"

        implementation(group: 'org.hibernate.validator', name: 'hibernate-validator', version: "${hibernateValidatorVersion}") {
            exclude group: 'org.jboss.logging'
        }

        implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"

        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.2.0"
        testImplementation 'org.mockito:mockito-core:2.17.0'
        testImplementation 'org.hsqldb:hsqldb:2.4.0'
    }
}


project(':jweb-framework:logback') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:module')
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    }
}

project(':jweb-framework:service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:module')
        implementation "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
        implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${jacksonVersion}"
        implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
        implementation "org.javassist:javassist:${javassistVersion}"
        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-client', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.glassfish.jersey.ext', name: 'jersey-bean-validation', version: "${jerseyVersion}") {
            exclude group: 'org.hibernate'
            exclude group: 'javax.el'
            exclude group: 'org.glassfish.web', module: 'javax.el'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        compile(group: 'org.glassfish.jersey.media', name: 'jersey-media-json-jackson', version: "${jerseyVersion}") {
            exclude group: 'com.fasterxml.jackson.core'
            exclude group: 'com.fasterxml.jackson.module'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        compile(group: 'org.glassfish.jersey.core', name: 'jersey-common', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.hibernate.validator', name: 'hibernate-validator', version: "${hibernateValidatorVersion}") {
            exclude group: 'org.jboss.logging'
        }
        testImplementation project(':jweb-framework:test')
        testImplementation project(':jweb-framework:undertow')
    }
}

project(':jweb-framework:admin') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        api project(':jweb-framework:web')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:cache-redis') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        api project(':jweb-framework:cache')
        implementation "redis.clients:jedis:${jedisVersion}"
        implementation "org.apache.commons:commons-pool2:${commonPoolVersion}"
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:cache') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:scheduler') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        implementation(group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0') {
            exclude group: 'com.mchange'
            exclude group: 'com.zaxxer'
        }
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:message') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:message-rabbitmq') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        api project(':jweb-framework:message')
        implementation group: 'org.apache.commons', name: 'commons-pool2', version: "${commonPoolVersion}"
        implementation group: 'com.rabbitmq', name: 'amqp-client', version: '5.4.1'
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:database') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        api "javax.persistence:javax.persistence-api:2.2"
        api group: 'javax.transaction', name: 'javax.transaction-api', version: '1.3'
        implementation "org.apache.commons:commons-dbcp2:${commonDBCPVersion}"
        implementation(group: 'org.hibernate', name: 'hibernate-core', version: "${hibernateVersion}") {
            exclude group: "org.jboss.spec.javax.transaction"
            exclude group: 'org.jboss.logging'
        }
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:undertow') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        implementation("io.undertow:undertow-core:${undertowVersion}") {
            exclude group: 'org.jboss.logging'
        }
        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-server', version: "${jerseyVersion}") {
            exclude group: 'javax.validation'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:template') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:module')
        implementation group: 'org.apache.commons', name: 'commons-jexl3', version: '3.1'
        implementation 'net.htmlparser.jericho:jericho-html:3.4'
        implementation "org.javassist:javassist:${javassistVersion}"
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:module')
        api project(':jweb-framework:template')
        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-common', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation(group: 'org.hibernate.validator', name: 'hibernate-validator', version: "${hibernateValidatorVersion}") {
            exclude group: 'org.jboss.logging'
        }
        implementation "redis.clients:jedis:${jedisVersion}"
        implementation 'org.apache.commons:commons-pool2:${commonPoolVersion}'
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-framework:test') {
    apply from: file("${rootDir}/gradle/module.gradle")


    dependencies {
        api project(':jweb-framework:module')
        api group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
        api 'org.mockito:mockito-core:2.17.0'
        api(group: 'org.glassfish.jersey.core', name: 'jersey-server', version: "${jerseyVersion}") {
            exclude group: 'javax.validation'
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation 'org.hsqldb:hsqldb:2.4.0'
        implementation project(':jweb-framework:database')
        implementation project(':jweb-framework:logback')
        implementation(group: 'org.glassfish.jersey.core', name: 'jersey-common', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        implementation "org.junit.jupiter:junit-jupiter-engine:5.2.0"

        testImplementation project(':jweb-framework:web')
        testImplementation project(':jweb-framework:service')
    }
}

project(':jweb-cms:file-service-api') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:service')
        testImplementation project(':jweb-framework:test')
    }

}

project(':jweb-cms:file-service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:file-service-api')
        implementation project(':jweb-framework:database')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:file-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:file-service-api')
        implementation project(':jweb-framework:web')
        implementation "org.imgscalr:imgscalr-lib:4.2"
        implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        testImplementation project(':jweb-cms:file-service')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:file-admin') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:file-service-api')
        implementation project(':jweb-framework:admin')
        implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-multipart', version: "${jerseyVersion}") {
            exclude group: 'org.glassfish.hk2.external', module: 'javax.inject'
        }
        testImplementation project(':jweb-cms:file-service')
        testImplementation project(':jweb-cms:file-web')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:pincode-service-api') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:service')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:pincode-service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:pincode-service-api')
        implementation project(':jweb-framework:database')
        implementation project(':jweb-framework:message')
        api('javax.mail:mail:1.4.7') {
            exclude group: 'javax.activation'
        }
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:pincode-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:pincode-service-api')
        implementation "com.github.cage:cage:1.0"
        implementation project(':jweb-framework:web')
        testImplementation project(':jweb-cms:pincode-service')
        testImplementation project(':jweb-framework:test')
    }
}


project(':jweb-cms:captcha-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        implementation project(':jweb-framework:web')
        testImplementation project(':jweb-framework:test')
    }
}


project(':jweb-cms:captcha-web-simple') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:captcha-web')
        implementation project(':jweb-framework:web')
        implementation name: 'simplecaptcha-1.2.1'
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:user-service-api') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:service')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:user-service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:user-service-api')
        implementation project(':jweb-framework:database')
        implementation project(':jweb-framework:message')

        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:user-admin') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:user-service-api')
        implementation project(':jweb-framework:admin')
        implementation project(':jweb-cms:captcha-web')
        implementation project(':jweb-framework:message')
        testImplementation project(':jweb-framework:test')
        testImplementation project(':jweb-cms:user-service')
    }
}

project(':jweb-cms:user-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:user-service-api')
        implementation project(':jweb-framework:web')
        implementation project(':jweb-framework:message')
        api project(':jweb-cms:page-web')
        implementation project(':jweb-framework:cache')
        implementation project(':jweb-cms:captcha-web')
        implementation project(':jweb-cms:pincode-web')
        implementation project(':jweb-cms:page-service-api')
        implementation "com.github.scribejava:scribejava-apis:5.5.0"
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:page-service-api') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:service')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:page-service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:page-service-api')
        implementation project(':jweb-framework:database')
        implementation project(':jweb-framework:message')
        implementation project(':jweb-framework:scheduler')
        implementation 'com.atlassian.commonmark:commonmark:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-autolink:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-ins:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-heading-anchor:0.11.0'
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:page-admin') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:page-service-api')
        implementation project(':jweb-framework:admin')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:page-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-cms:page-service-api')
        implementation project(':jweb-framework:web')
        implementation project(':jweb-framework:cache')
        implementation project(':jweb-framework:message')
        implementation 'com.atlassian.commonmark:commonmark:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-gfm-tables:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-gfm-strikethrough:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-autolink:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-ins:0.11.0'
        implementation 'com.atlassian.commonmark:commonmark-ext-heading-anchor:0.11.0'
        testImplementation project(':jweb-framework:test')
    }
}


project(':jweb-cms:comment-service-api') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        api project(':jweb-framework:service')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:comment-service') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        implementation project(':jweb-framework:service')
        implementation project(':jweb-framework:database')
        implementation project(':jweb-framework:message')
        api project(':jweb-cms:page-service-api')
        api project(':jweb-cms:comment-service-api')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:comment-web') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        implementation project(':jweb-framework:web')
        api project(':jweb-cms:comment-service-api')
        api project(':jweb-cms:user-service-api')
        api project(':jweb-cms:page-web')
        testImplementation project(':jweb-framework:test')
    }
}

project(':jweb-cms:comment-admin') {
    apply from: file("${rootDir}/gradle/module.gradle")

    dependencies {
        implementation project(':jweb-framework:admin')
        api project(':jweb-cms:comment-service-api')
        implementation project(':jweb-cms:page-admin')
        testImplementation project(':jweb-framework:test')
    }
}


project(':jweb-main') {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        compile group: 'javax.activation', name: 'activation', version: '1.1.1'

        // https://mvnrepository.com/artifact/org.snmp4j/snmp4j
        compile group: 'org.snmp4j', name: 'snmp4j', version: '2.6.3'

        compile project(':jweb-cms:page-service')
        compile project(':jweb-cms:page-web')
        compile project(':jweb-cms:page-admin')
        compile project(':jweb-cms:user-service')
        compile project(':jweb-cms:user-web')
        compile project(':jweb-cms:user-admin')
        compile project(':jweb-cms:file-service')
        compile project(':jweb-cms:file-web')
        compile project(':jweb-cms:file-admin')
        compile project(':jweb-cms:pincode-service')
        compile project(':jweb-cms:pincode-web')
        compile project(':jweb-cms:captcha-web-simple')
        compile project(':jweb-framework:undertow')
        compile project(':jweb-framework:logback')
        compile project(':jweb-framework:web')
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
        compile 'mysql:mysql-connector-java:8.0.11'
        compile 'org.hsqldb:hsqldb:2.4.0'
    }
}